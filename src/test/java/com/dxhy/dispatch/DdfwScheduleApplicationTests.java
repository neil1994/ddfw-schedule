package com.dxhy.dispatch;

import com.dxhy.dispatch.manage.bean.protocol.Enterprise;
import com.dxhy.dispatch.manage.bean.protocol.EnterpriseBase;
import com.dxhy.dispatch.manage.bean.protocol.ServiceInfo;
import com.dxhy.dispatch.utils.Base64Encoding;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringRunner;

import java.io.IOException;

@RunWith(SpringRunner.class)
public class DdfwScheduleApplicationTests {

	@Test
	public void contextLoads() {

		Enterprise enterprise=new Enterprise();
		EnterpriseBase enterpriseBase=new EnterpriseBase();
		enterpriseBase.setAreaId("sdsdsdsdsds");
		enterpriseBase.setBusinessLicence("asadasd");
		enterpriseBase.setBusinessLicenceImg("dsssssssssssssssssssssssssssssssssssssssssssssssssssss");
		enterpriseBase.setContracts("dssdsddsdsdsdsd");
		ServiceInfo serviceInfo=new ServiceInfo();
		serviceInfo.setCertEmail("2121212121212");
		serviceInfo.setProviderName("FDJKFHLKJSDFSF");
		serviceInfo.setSignatureProxyImg("sdsddddddddddddd");
		serviceInfo.setTaxOrgId("dsdsdsdsd");
		enterprise.setEnterpriseBase(enterpriseBase);
		enterprise.setServiceInfo(serviceInfo);
		ObjectMapper objectMapper=new ObjectMapper();
		try {
            String valueAsString = objectMapper.writeValueAsString(enterprise);
            System.out.println(valueAsString);
        } catch (JsonProcessingException e) {
			e.printStackTrace();
		}

	}
	@Test
	public void testJson() throws Exception {
		ObjectMapper objectMapper =new ObjectMapper();
		String json="";
		String decodeToString = Base64Encoding.decodeToString(json);
		Enterprise enterprise = objectMapper.readValue(decodeToString, Enterprise.class);
		System.out.println(enterprise.getServiceInfo().toString());
	}


}
